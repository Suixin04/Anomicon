/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { SCP, Tale } from "./types";


/**
 * Favorite item data model for SCP items and tales.
 */
export class FavoriteItem {
  id: number;
  scpId: string;
  scpNumber: string;
  title: string;
  objectClass: string;
  description: string;
  imageUrl: string;
  dateAdded: string;
  type: string; // 'SCP' or 'TALE'

  constructor(
    id: number,
    scpId: string,
    scpNumber: string,
    title: string,
    objectClass: string,
    description: string,
    imageUrl: string,
    dateAdded: string,
    type: string
  ) {
    this.id = id;
    this.scpId = scpId;
    this.scpNumber = scpNumber;
    this.title = title;
    this.objectClass = objectClass;
    this.description = description;
    this.imageUrl = imageUrl;
    this.dateAdded = dateAdded;
    this.type = type;
  }

  /**
   * Create FavoriteItem from SCP object.
   */
  static fromSCP(scp: SCP): FavoriteItem {
    return new FavoriteItem(
      0, // id will be auto-generated by database
      scp.id,
      scp.number,
      scp.title,
      scp.objectClass,
      scp.description,
      scp.image || '',
      new Date().toISOString(),
      'SCP'
    );
  }

  /**
   * Create FavoriteItem from Tale object.
   */
  static fromTale(tale: Tale): FavoriteItem {
    return new FavoriteItem(
      0, // id will be auto-generated by database
      tale.id,
      tale.title, // use title as number for tales
      tale.title,
      'Tale', // use 'Tale' as object class for tales
      tale.content.substring(0, 200) + '...', // truncate content for description
      '', // tales don't have images
      new Date().toISOString(),
      'TALE'
    );
  }
}